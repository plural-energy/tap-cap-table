{"abi":[{"type":"fallback","stateMutability":"payable"},{"type":"receive","stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin/=lib/openzeppelin-contracts/\",\"lib/forge-std:ds-test/=lib/forge-std/lib/ds-test/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"payable","type":"fallback"},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin/=lib/openzeppelin-contracts/","lib/forge-std:ds-test/=lib/forge-std/lib/ds-test/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"none","appendCBOR":false},"compilationTarget":{"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol":"Proxy"},"evmVersion":"paris","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol":{"keccak256":"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27","urls":["bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472","dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol","id":49119,"exportedSymbols":{"Proxy":[49118]},"nodeType":"SourceUnit","src":"99:3148:42","nodes":[{"id":49068,"nodeType":"PragmaDirective","src":"99:23:42","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":49118,"nodeType":"ContractDefinition","src":"723:2523:42","nodes":[{"id":49077,"nodeType":"FunctionDefinition","src":"948:895:42","nodes":[],"body":{"id":49076,"nodeType":"Block","src":"1008:835:42","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"1027:810:42","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1280:1:42","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1283:1:42","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1286:12:42"},"nodeType":"YulFunctionCall","src":"1286:14:42"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1267:12:42"},"nodeType":"YulFunctionCall","src":"1267:34:42"},"nodeType":"YulExpressionStatement","src":"1267:34:42"},{"nodeType":"YulVariableDeclaration","src":"1428:74:42","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1455:3:42"},"nodeType":"YulFunctionCall","src":"1455:5:42"},{"name":"implementation","nodeType":"YulIdentifier","src":"1462:14:42"},{"kind":"number","nodeType":"YulLiteral","src":"1478:1:42","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1481:12:42"},"nodeType":"YulFunctionCall","src":"1481:14:42"},{"kind":"number","nodeType":"YulLiteral","src":"1497:1:42","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1500:1:42","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"1442:12:42"},"nodeType":"YulFunctionCall","src":"1442:60:42"},"variables":[{"name":"result","nodeType":"YulTypedName","src":"1432:6:42","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1570:1:42","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1573:1:42","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1576:14:42"},"nodeType":"YulFunctionCall","src":"1576:16:42"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"1555:14:42"},"nodeType":"YulFunctionCall","src":"1555:38:42"},"nodeType":"YulExpressionStatement","src":"1555:38:42"},{"cases":[{"body":{"nodeType":"YulBlock","src":"1688:59:42","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1713:1:42","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1716:14:42"},"nodeType":"YulFunctionCall","src":"1716:16:42"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1706:6:42"},"nodeType":"YulFunctionCall","src":"1706:27:42"},"nodeType":"YulExpressionStatement","src":"1706:27:42"}]},"nodeType":"YulCase","src":"1681:66:42","value":{"kind":"number","nodeType":"YulLiteral","src":"1686:1:42","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"1768:59:42","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1793:1:42","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1796:14:42"},"nodeType":"YulFunctionCall","src":"1796:16:42"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"1786:6:42"},"nodeType":"YulFunctionCall","src":"1786:27:42"},"nodeType":"YulExpressionStatement","src":"1786:27:42"}]},"nodeType":"YulCase","src":"1760:67:42","value":"default"}],"expression":{"name":"result","nodeType":"YulIdentifier","src":"1614:6:42"},"nodeType":"YulSwitch","src":"1607:220:42"}]},"evmVersion":"paris","externalReferences":[{"declaration":49072,"isOffset":false,"isSlot":false,"src":"1462:14:42","valueSize":1}],"id":49075,"nodeType":"InlineAssembly","src":"1018:819:42"}]},"documentation":{"id":49070,"nodeType":"StructuredDocumentation","src":"753:190:42","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"957:9:42","parameters":{"id":49073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49072,"mutability":"mutable","name":"implementation","nameLocation":"975:14:42","nodeType":"VariableDeclaration","scope":49077,"src":"967:22:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49071,"name":"address","nodeType":"ElementaryTypeName","src":"967:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"966:24:42"},"returnParameters":{"id":49074,"nodeType":"ParameterList","parameters":[],"src":"1008:0:42"},"scope":49118,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":49083,"nodeType":"FunctionDefinition","src":"2027:67:42","nodes":[],"documentation":{"id":49078,"nodeType":"StructuredDocumentation","src":"1849:173:42","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n and {_fallback} should delegate."},"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2036:15:42","parameters":{"id":49079,"nodeType":"ParameterList","parameters":[],"src":"2051:2:42"},"returnParameters":{"id":49082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49081,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":49083,"src":"2085:7:42","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49080,"name":"address","nodeType":"ElementaryTypeName","src":"2085:7:42","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2084:9:42"},"scope":49118,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":49096,"nodeType":"FunctionDefinition","src":"2322:110:42","nodes":[],"body":{"id":49095,"nodeType":"Block","src":"2360:72:42","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":49087,"name":"_beforeFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49117,"src":"2370:15:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":49088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2370:17:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49089,"nodeType":"ExpressionStatement","src":"2370:17:42"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":49091,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49083,"src":"2407:15:42","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":49092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:17:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49090,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49077,"src":"2397:9:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":49093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2397:28:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49094,"nodeType":"ExpressionStatement","src":"2397:28:42"}]},"documentation":{"id":49084,"nodeType":"StructuredDocumentation","src":"2100:217:42","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2331:9:42","parameters":{"id":49085,"nodeType":"ParameterList","parameters":[],"src":"2340:2:42"},"returnParameters":{"id":49086,"nodeType":"ParameterList","parameters":[],"src":"2360:0:42"},"scope":49118,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":49104,"nodeType":"FunctionDefinition","src":"2629:64:42","nodes":[],"body":{"id":49103,"nodeType":"Block","src":"2665:28:42","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":49100,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49096,"src":"2675:9:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":49101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:11:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49102,"nodeType":"ExpressionStatement","src":"2675:11:42"}]},"documentation":{"id":49097,"nodeType":"StructuredDocumentation","src":"2438:186:42","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":49098,"nodeType":"ParameterList","parameters":[],"src":"2637:2:42"},"returnParameters":{"id":49099,"nodeType":"ParameterList","parameters":[],"src":"2665:0:42"},"scope":49118,"stateMutability":"payable","virtual":true,"visibility":"external"},{"id":49112,"nodeType":"FunctionDefinition","src":"2853:63:42","nodes":[],"body":{"id":49111,"nodeType":"Block","src":"2888:28:42","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":49108,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":49096,"src":"2898:9:42","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":49109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2898:11:42","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":49110,"nodeType":"ExpressionStatement","src":"2898:11:42"}]},"documentation":{"id":49105,"nodeType":"StructuredDocumentation","src":"2699:149:42","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."},"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":49106,"nodeType":"ParameterList","parameters":[],"src":"2860:2:42"},"returnParameters":{"id":49107,"nodeType":"ParameterList","parameters":[],"src":"2888:0:42"},"scope":49118,"stateMutability":"payable","virtual":true,"visibility":"external"},{"id":49117,"nodeType":"FunctionDefinition","src":"3198:46:42","nodes":[],"body":{"id":49116,"nodeType":"Block","src":"3242:2:42","nodes":[],"statements":[]},"documentation":{"id":49113,"nodeType":"StructuredDocumentation","src":"2922:271:42","text":" @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overridden should call `super._beforeFallback()`."},"implemented":true,"kind":"function","modifiers":[],"name":"_beforeFallback","nameLocation":"3207:15:42","parameters":{"id":49114,"nodeType":"ParameterList","parameters":[],"src":"3222:2:42"},"returnParameters":{"id":49115,"nodeType":"ParameterList","parameters":[],"src":"3242:0:42"},"scope":49118,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":49069,"nodeType":"StructuredDocumentation","src":"124:598:42","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"linearizedBaseContracts":[49118],"name":"Proxy","nameLocation":"741:5:42","scope":49119,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":42}